import numpy as np
import pandas as pd
import matplotlib.pyplot as plt

df = pd.read_excel('SPX_dailyprice.xlsx')

# 1 day shift to avoid forward look
df['prev_day_sma'] = df['PX_LAST'].rolling(200).mean().shift(1)
df['prev_day_sema'] = df['PX_LAST'].ewm(12).mean().shift(1)
df['prev_day_lema'] = df['PX_LAST'].ewm(30).mean().shift(1)

df['price_relative_sma'] = np.where(df['PX_LAST'].shift(1) >= df['prev_day_sma'], 1, -1)
df['ema_state'] = np.where(df['prev_day_sema'] > df['prev_day_lema'], 1, -1)

df['sma_reset'] = np.where(df['price_relative_sma'] != df['price_relative_sma'].shift(1), 1, 0)
df['temp1'] = df['sma_reset'].cumsum()
df['price_relative_sma_count'] = df.groupby(['temp1'])['price_relative_sma'].cumsum()

df['ema_reset'] = np.where(df['ema_state'] != df['ema_state'].shift(1), 1, 0)
df['temp2'] = df['ema_reset'].cumsum()
df['ema_state_count'] = df.groupby(['temp2'])['ema_state'].cumsum()

df['target'] = np.where(df['PX_LAST'] > df['PX_LAST'].shift(1), 1, 0)

# Setup ML problem
X = df[['price_relative_sma_count', 'ema_state_count']]
y = df['target']
from sklearn.model_selection import train_test_split
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, shuffle=False)

# Apply ML algo
from sklearn import tree
clf = tree.DecisionTreeClassifier(max_depth=2)
clf.fit(X_train, y_train)

y_predidctions = clf.predict(X_test)
from sklearn.metrics import balanced_accuracy_score
balanced_accuracy_score = balanced_accuracy_score(y_predidctions, y_test)

print(balanced_accuracy_score)

fig = plt.figure(figsize=(10,10))
_ = tree.plot_tree(clf, feature_names=X.columns, fontsize=8, filled=True)
plt.show()
